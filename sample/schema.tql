define

# === properties.tql ===

# --- Common properties ---

attribute id, value string;
attribute type, value string;
attribute spec-version, value string;
attribute created-by-ref, value string;
attribute created, value datetime-tz;
attribute modified, value datetime-tz;
attribute revoked, value boolean;
attribute confidence, value integer;
attribute lang, value string;
attribute defanged, value boolean;
attribute relationship-type, value string;
attribute start-time, value datetime-tz;
attribute stop-time, value datetime-tz;
attribute count, value integer;
attribute summary, value string;

attribute label_, value string; # to be used as a list

# TODO: The following properties are not included as they are lists or dictionaries:
# - extensions (dictionary) 

# --- Properties listed by multiple objects ---
attribute alias_, value string;  		# note: alias is reserved in TypeQL, use alias_ instead
attribute description, value string;
attribute first-seen, value datetime-tz;
attribute last-seen, value datetime-tz;
attribute objective, value string;
attribute url-value, value string;      # TODO: encode the URL RFC3986

# --- Additional common properties ---
attribute name, value string;
attribute context, value string; # Uses the `grouping-context-ov` open vocabulary (10.6)
attribute role_, value string; # Uses the `threat-actor-role-ov` open vocabulary (10.24)
attribute identity-class, value string; # Uses the `identity-class-ov` open vocabulary (10.8)
attribute sector, value string; # Uses the `industry-sector-ov` open vocabulary (10.11)
attribute contact-information, value string;

# --- Indicator specific properties (4.7) ---
attribute indicator-type, value string; # Uses the `indicator-type-ov` open vocabulary (10.10)
attribute pattern, value string;
attribute pattern-type, value string; # Uses the `pattern-type-ov` open vocabulary (10.19)
attribute pattern-version, value string;
attribute valid-from, value datetime-tz;
attribute valid-until, value datetime-tz;

# --- Infrastructure specific properties (4.8) ---
attribute infrastructure-type, value string; # Uses the `infrastructure-type-ov` open vocabulary (10.12)

# --- Note-specific properties (4.13) ---
attribute abstract_, value string;
attribute content, value string;
attribute author, value string;

# --- Observed Data specific properties (4.14) ---
attribute first-observed, value datetime-tz;
attribute last-observed, value datetime-tz;
attribute number-observed, value integer;

# --- Opinion-specific properties (4.15) ---
attribute opinion, 
	# Uses the `opinion-enum` enumeration (10.18)
	value string @values("strongly-disagree", "disagree", "neutral", "agree", "strongly-agree");
attribute explanation, value string;

# --- Report specific properties (4.16) ---
attribute report-type, value string; # Uses the `report-type-ov` open vocabulary (10.22)
attribute published, value datetime-tz;

# --- Threat Actor specific properties (4.17) ---
attribute threat-actor-type, value string; # Uses the `threat-actor-type-ov` open vocabulary (10.23)
attribute goal, value string;
attribute sophistication, value string; # Uses the `threat-actor-sophistication-ov` open vocabulary (10.25)
attribute resource-level, value string; # Uses the `attack-resource-level-ov` open vocabulary (10.3)

# TODO: this attribute hierarchy isn't working?
 attribute motivation @abstract, value string; # Uses the `attack-motivation-ov`open vocabulary (10.2)
 attribute primary-motivation, sub motivation;
 attribute secondary-motivation, sub motivation;
 attribute personal-motivation, sub motivation;

# --- Tool specific properties (4.18) ---
attribute tool-type, value string; # Uses the `tool-type-ov` open vocabulary (10.26)
attribute tool-version, value string;

# --- Location specific properties (4.10) ---
attribute latitude, value double;
attribute longitude, value double;
attribute precision, value double;
attribute region, value string; # Uses the `region-ov` open vocabulary (10.21)
attribute country, value string;
attribute administrative-area, value string;
attribute city, value string;
attribute street-address, value string;
attribute postal-code, value string;

# Malware specific properties (4.11)
attribute malware-type, value string; # Uses the `malware-type-ov` open vocabulary (10.15)

attribute is-family, value boolean;
attribute architecture-execution-env, value string; # Uses the `processor-architecture-ov` open vocabulary (10.20)

attribute implementation-language, value string; # Uses the `implementation-language-ov` open vocabulary (10.9)

attribute capability, value string; # Uses the `malware-capabilities-ov` open vocabulary (10.14)

# Malware Analysis specific properties (4.12)
attribute product,
  value string;

attribute version,
  value string;

attribute host-vm-ref,
  value string;

attribute operating-system-ref,
  value string;

attribute installed-software-ref,
  value string;

attribute configuration-version,
  value string;

attribute module,
  value string;

attribute analysis-engine-version,
  value string;

attribute analysis-definition-version,
  value string;

attribute submitted,
  value datetime-tz;

attribute analysis-started,
  value datetime-tz;

attribute analysis-ended,
  value datetime-tz;

attribute result-name,
  value string;

attribute result, value string; # Uses the `malware-result-ov` open vocabulary (10.13)

attribute analysis-sco-ref,
  value string;

attribute sample-ref,
  value string;

# Artifact object specific properties (6.1)

attribute mime-type, value string;
attribute payload-bin, value string;
attribute decryption-key, value string;

attribute hash-algorithm, value string; # Uses the `hash-algorithm-ov` open vocabulary (10.7)
attribute hash, value string; 

attribute encryption-algorithm,
  value string
  # Uses the `encryption-algorithm-enum` enumeration (10.5)
  @values("AES-256-GCM", "ChaCha20-Poly1305", "mime-type-indicated");

# Autonomous System object specific properties (6.2)
attribute system-number,
  value integer;  

attribute system-name,
  value string;   

attribute rir,
  value string;   

# Directory object specific properties (6.3)
attribute path,
  value string;  

attribute path-enc,
  value string;  

attribute ctime,
  value datetime-tz;

attribute mtime,
  value datetime-tz; 

attribute atime,
  value datetime-tz;

attribute contains-ref,
  value string;

# Domain Name object specific properties (6.4)
attribute domain-value,
  value string;

attribute resolves-to-ref,
  value string;

# Email Address object specific properties (6.5)
attribute email-value,
  value string;

attribute display-name,
  value string;

attribute belongs-to-ref,
  value string;

# Email Message object specific properties (6.6)
attribute is-multipart,
  value boolean;

attribute date_,
  value datetime-tz;

attribute content-type,
  value string;

attribute content-disposition,
  value string;

attribute from-ref,
  value string;

attribute sender-ref,
  value string;

attribute to-ref,
  value string;

attribute cc-ref,
  value string;

attribute bcc-ref,
  value string;

attribute message-id,
  value string;

attribute subject,
  value string;

attribute received-line,
  value string;

attribute additional-header-field,
  value string;

attribute additional-header-value,
  value string;

attribute body,
  value string;

# File object specific properties (6.7)
attribute size,
  value integer;

attribute name,
  value string;

attribute name-enc,
  value string;

attribute magic-number-hex,
  value string;

attribute parent-directory-ref,
  value string;

attribute content-ref,
  value string;

# Archive file extension properties (6.7.2)
attribute comment,
  value string;

# NTFS File Extension properties (6.7.3)
attribute sid,
  value string;

# PDF File Extension attributes (6.7.4)
attribute is-optimized, 
  value boolean;

attribute pdfid0,
  value string;

attribute pdfid1,
  value string;

# Raster Image File Extension attributes (6.7.5)
attribute image-height,
  value integer;

attribute image-width,
  value integer;

attribute bits-per-pixel,
  value integer;

# Windows PE Binary File Extension attributes (6.7.6) 
attribute pe-type, value string; # Uses the `windows-pebinary-type-ov` open vocabulary (10.28)

attribute imphash,
  value string;

attribute machine-hex,
  value string;

attribute number-of-sections,
  value integer;

attribute time-date-stamp,
  value datetime-tz;

attribute pointer-to-symbol-table-hex,
  value string;

attribute size-of-optional-header,
  value integer;

attribute characteristics-hex,
  value string;

# Windows PE Optional Header attributes (6.7.6.2)
attribute magic-hex, 
  value string;
attribute major-linker-version,
  value integer;
attribute minor-linker-version, 
  value integer;
attribute size-of-code, 
  value integer @range(0..);
attribute size-of-initialized-data, 
  value integer @range(0..);
attribute size-of-uninitialized-data, 
  value integer @range(0..);
attribute address-of-entry-point, 
  value integer;
attribute base-of-code, 
  value integer;
attribute base-of-data, 
  value integer;
attribute image-base, 
  value integer;
attribute section-alignment,  
  value integer;
attribute file-alignment, 
  value integer;
attribute major-os-version,
  value integer;
attribute minor-os-version, 
  value integer;
attribute major-image-version, 
  value integer;
attribute minor-image-version, 
  value integer;
attribute major-subsystem-version, 
  value integer;
attribute minor-subsystem-version, 
  value integer;
attribute win32-version-value-hex, 
  value string;
attribute size-of-image, 
  value integer @range(0..);
attribute size-of-headers, 
  value integer @range(0..);
attribute checksum-hex, 
  value string;
attribute subsystem-hex, 
  value string;
attribute dll-characteristics-hex, 
  value string;
attribute size-of-stack-reserve, 
  value integer @range(0..);
attribute size-of-stack-commit, 
  value integer @range(0..);
attribute size-of-heap-reserve, 
  value integer @range(0..);
attribute size-of-heap-commit, 
  value integer @range(0..);
attribute loader-flags-hex, 
  value string;
attribute number-of-rva-and-sizes, 
  value integer;

# Windows PE Section attributes (6.7.6.3)
attribute entropy,
  value double;

# IPv4 Address object specific properties (6.8)
attribute ipv4-value,
  value string;

attribute resolves-to-ref,
  value string;

attribute belongs-to-ref,
  value string;

# IPv6 Address object specific properties (6.9)
attribute ipv6-value,
  value string; 

# MAC Address object specific properties (6.10)
attribute mac-value,  # TODO: regex for Mac address validation
  value string;

# Network Traffic object specific properties (6.12)
attribute start,
  value datetime-tz;
attribute end_,
  value datetime-tz;
attribute is-active,
  value boolean;
attribute src-ref,
  value string;
attribute dst-ref,
  value string;
attribute src-port,
  value integer @range(0..65536);  # Range 0-65535
attribute dst-port,
  value integer @range(0..65536);  # Range 0-65535
attribute protocol, 
  value string;
attribute src-byte-count,
  value integer @range(0..);   # Must be positive
attribute dst-byte-count,
  value integer @range(0..);   # Must be positive
attribute src-packets,
  value integer @range(0..);   # Must be positive
attribute dst-packets,
  value integer @range(0..);   # Must be positive
attribute src-payload-ref,
  value string;
attribute dst-payload-ref,
  value string;
attribute encapsulates-ref,
  value string;
attribute encapsulated-by-ref,
  value string;

# ICMP Extension properties (6.12.3)
attribute icmp-type-hex, 
  value string;

attribute icmp-code-hex,
  value string;

# Network Socket Extension properties (6.12.4)
attribute address-family,
  value string
  # Uses the `network-socket-address-family-enum` enumeration (10.16)
  @values("AF-UNSPEC", "AF-INET", "AF-IPX", "AF-APPLETALK", "AF-NETBIOS", "AF-INET6", "AF-IRDA", "AF-BTH");

attribute is-blocking,
  value boolean;

attribute is-listening,
  value boolean;

attribute socket-type,
  value string
  # Uses the `network-socket-type-enum` enumeration (10.17)
  @values("SOCK-STREAM", "AF-ISOCK-DGRAMNET", "SOCK-RAW", "SOCK-RDM", "SOCK-SEQPACKET"); 

attribute socket-descriptor,
  value integer @range(0..);

attribute socket-handle,
  value integer @range(0..);

# TCP extension properties (6.12.5)
attribute src-flags-hex,
  value string;

attribute dst-flags-hex,
  value string;

# Process object specific properties (6.13)
attribute is-hidden,
  value boolean;

attribute pid,
  value integer;

attribute created-time,
  value datetime-tz;

attribute cwd,
  value string;

attribute command-line,
  value string;

attribute environment-variables,
  value string;

attribute opened-connection-refs,
  value string;

attribute creator-user-ref,
  value string;

attribute image-ref,
  value string;

attribute parent-ref,
  value string;

attribute child-refs,
  value string;

# Software object specific properties (6.14)
attribute cpe, value string;
attribute swid, value string;
attribute language, value string;
attribute vendor, value string;

# User Account object specific properties (6.16)
attribute user-id, value string;
attribute credential, value string;
attribute account-login, value string;
attribute account-type, value string; # Uses the `account-type-ov` open vocabulary (10.1)
attribute display-name, value string;
attribute is-service-account, value boolean;
attribute is-privileged, value boolean;
attribute can-escalate-privs, value boolean;
attribute is-disabled, value boolean;
attribute account-created, value datetime-tz;
attribute account-expires, value datetime-tz;
attribute credential-last-changed, value datetime-tz;
attribute account-first-login, value datetime-tz;
attribute account-last-login, value datetime-tz;

# Windows™ Registry Key Object specific properties (6.17)
attribute windows-registry-key-string, value string;
attribute number-of-subkeys, value integer;
attribute modified-time, value datetime-tz;
  # TODO: windows-registry-value struct

# X.509 Certificate Object specific properties (6.18)
attribute is-self-signed, value boolean;
# 'hashes' is already defined (generic)
# 'version' is already defined (generic)
attribute serial-number, value string;
attribute signature-algorithm, value string;
attribute issuer, value string;
attribute validity-not-before, value datetime-tz;
attribute validity-not-after, value datetime-tz;
attribute subject, value string;
attribute subject-public-key-algorithm, value string;
attribute subject-public-key-modulus, value string;
attribute subject-public-key-exponent, value integer;

# X.509 v3 Certificate Extension properties (6.18.2)
attribute basic-constraints, 
  value string;
attribute name-constraints, 
  value string;
attribute policy-constraints, 
  value string;
attribute key-usage, 
  value string;
attribute extended-key-usage, 
  value string;
attribute subject-key-identifier, 
  value string;
attribute authority-key-identifier, 
  value string;
attribute subject-alternative-name, 
  value string;
attribute issuer-alternative-name, 
  value string;
attribute subject-directory-attributes, 
  value string;
attribute crl-distribution-points, 
  value string;
attribute inhibit-any-policy, 
  value string;
attribute private-key-usage-period-not-before, 
  value datetime-tz;
attribute private-key-usage-period-not-after, 
  value datetime-tz;
attribute certificate-policies, 
  value string;
attribute policy-mappings, 
  value string;

# Granular marking (relation) (7.2.3)
attribute selector, value string;

# Extension Definitions Properties specific properties (7.3)
attribute schema, value string;
attribute extension-type, value string;
# TODO:  
  # Extension property names MUST be in ASCII and MUST only contain the characters a–z (lowercase ASCII), 0–9, and underscore (_).
  # Extension property names MUST be in ASCII and MUST only contain the characters a–z (lowercase ASCII), 0–9, and underscore (_).
  # Extension property names MUST have a minimum length of 3 ASCII characters.
  # Extension property names MUST be no longer than 250 ASCII characters in length
  # Extension property names MUST have a minimum length of 3 ASCII characters.
  # Extension property names MUST be no longer than 250 ASCII characters in length.
attribute extension-property, value string;

# HTTP Request Extension attributes (6.12.2)
attribute request-method,
  value string;
attribute request-value,
  value string;
attribute request-version,
  value string;
attribute message-body-length,
  value integer;

# Windows Process Extension (6.13.2)
attribute aslr-enabled, 
  value boolean;
attribute dep-enabled, 
  value boolean;
attribute priority, 
  value string;
attribute owner-sid, 
  value string;
attribute window-title, 
  value string;
attribute integrity-level, 
  value string
  # Uses the `windows-integrity-level-enum` enumeration (10.27)
  @values("low", "medium", "high", "system");


# Windows Service Extension properties (6.13.2)
attribute service-name,
  value string;
attribute display-name,
  value string;
attribute group-name,
  value string;
attribute start-type,
  value string
  # Uses the `windows-service-start-type-enum` enumeration (10.30)
  @values("SERVICE-AUTO-START", "SERVICE-BOOT-START", "SERVICE-DEMAND-START", "SERVICE-DISABLED", "SERVICE-SYSTEM-ALERT");

attribute service-type,
  value string
  # Uses the `windows-service-type-enum` enumeration (10.31)
  @values("SERVICE-KERNEL-DRIVER", "SERVICE-FILE-SYSTEM-DRIVER", "SERVICE-WIN32-OWN-PROCESS", "SERVICE-WIN32-SHARE-PROCESS");

attribute service-status,
  value string
  # Uses the `windows-service-status-enum` enumeration (10.32)
  @values("SERVICE-STOPPED", "SERVICE-START-PENDING", "SERVICE-STOP-PENDING", "SERVICE-RUNNING", "SERVICE-CONTINUE-PENDING", "SERVICE-PAUSE-PENDING", "SERVICE-PAUSED");

# UNIX Account extension properties (6.16.2)
attribute gid,
  value integer;

attribute group_,
  value string;

attribute home-dir,
  value string;

attribute shell,
  value string;

# Windows Registry Value properties (6.17.2)
attribute registry-value-data,
  value string;

attribute registry-value-data-type,
  value string
  # Uses the `windows-registry-datatype-enum` enumeration (10.29)
  @values("REG_NONE", "REG_SZ", "REG_EXPAND_SZ", "REG_BINARY", "REG_DWORD", "REG_DWORD_BIG_ENDIAN", "REG_DWORD_LITTLE_ENDIAN", "REG_LINK", "REG_MULTI_SZ", "REG_RESOURCE_LIST",
  "REG_FULL_RESOURCE_DESCRIPTION", "REG_RESOURCE_REQUIREMENTS_LIST", "REG_QWORD", "REG_INVALID_TYPE");

# === additional_components.tql ===

# common dictionary structure
relation dictionary-entry,
  relates owner @card(1);

attribute dict-key @abstract;
attribute dict-value @abstract;

attribute key-string,
  sub dict-key,
  value string;

attribute value-string,
  sub dict-value,
  value string;

attribute value-integer,
  sub dict-value,
  value integer;

# External References (2.5)
entity external-reference,
  owns source-name @card(1),
  owns description,
  owns url-value,
  owns external-id,
  plays external-reference-ownership:external-reference,
  plays hash-entry:hash-owner;

attribute source-name, value string;
attribute external-id, value string;

relation external-reference-ownership,
  relates owner @card(1),
  relates external-reference @card(1);

# Hashes (2.7)
relation hash-entry,
  sub dictionary-entry,
  owns hash-algorithm @card(1),
  owns hash @card(1),
  relates hash-owner as owner;

# Kill Chain Phase (2.11)
entity kill-chain-phase,
  owns kill-chain-name @card(1),
  owns phase-name @key,
  plays kill-chain-phase-ownership:kill-chain-phase;

attribute kill-chain-name, value string;
attribute phase-name, value string;

relation kill-chain-phase-ownership,
  relates owner @card(1),
  relates kill-chain-phase @card(1);

# extending existing relationships
relation stix-relationship-object,
  plays external-reference-ownership:owner;


# === relationships.tql ===

relation stix-relationship-object,
  relates source @card(1),
  relates target @card(1),

  # required common properties
  owns id @key,
  owns type @card(1) @values("relationship"),
  owns spec-version @card(1) @values("2.1") ,
  owns created @card(1),
  owns modified @card(1),

  # optional common properties
  owns revoked,
  owns label_ @card(0..),
  owns confidence,
  owns lang,

    # TODO: unimplemented
    # owns extensions,

  # specific properties
  owns relationship-type @card(1),
  owns description,
  owns start-time,
  owns stop-time,

  # embedded relationships
  plays created-by:created,
  plays object-marking:object,
  plays granular-marking:object,


  plays external-reference-ownership:owner;  # TODO not implemented: requires lists, if order is important


# Ternary relation!!
relation sighting,
  sub stix-relationship-object,

  relates sighting-of as target @card(1),
  relates observed-data as source @card(0..), # TODO: does this make sense as a 'source'?
  relates where-sighted as source @card(0..), # TODO: does this make sense as a 'source'?

  owns first-seen,
  owns last-seen,
  owns count,
  owns summary;


# --- Common relationships ---

# TODO: not encodable - constraint that player of source and player of target must be the same types
relation derived-from,
  sub stix-relationship-object,
  relates deriving-source as source @card(1),
  relates derived-target as target @card(1);

# TODO: not encodable - constraint that player of source and player of target must be the same types
# TODO: this would be better off not as an SRO subtype
 #      but as a separate type that doesn't distinguish source and target and uses a single role with @card(2..)
relation duplicate-of,
  sub stix-relationship-object,
  relates duplicating-source as source,
  relates duplicated-target as target;

# TODO: this would be better off not as an SRO subtype
#       but as a separate type that doesn't distinguish source and target and uses a single role with @card(2..)
relation related-to,
sub stix-relationship-object,
  relates relating-source as source,
  relates related-target as target;


# --- Relationships used by multiple objects ---
relation delivers,
  sub stix-relationship-object,
  relates delivering-source as source,
  relates delivered-target as target;

relation targets,
	sub stix-relationship-object,
    relates targeting-source as source,
    relates targeted-target as target;

relation attributed-to,
	sub stix-relationship-object,
    relates attributing-source as source,
    relates attributed-target as target;

relation mitigates,
	sub stix-relationship-object,
	relates mitigating-source as source,
	relates mitigated-target as target;

relation indicates,
	sub stix-relationship-object,
	relates indicating-source as source,
	relates indicated-target as target;

relation reference,
	sub stix-relationship-object,
	relates referencing-source as source,
	relates referenced-target as target;

relation uses,
	sub stix-relationship-object,
	relates using-source as source,
	relates used-target as target;

relation located-at,
	sub stix-relationship-object,
	relates locating-source as source,
	relates location-target as target;

relation originates-from,
	sub stix-relationship-object,
	relates originating-source as source,
	relates origin-target as target;

relation has_, # note: has is reserved in TypeQL, use has_ instead
	sub stix-relationship-object,
	relates having-source as source,
	relates had-target as target;

relation hosts,
	sub stix-relationship-object,
	relates hosting-source as source,
	relates hosted-target as target;

relation ownership,
	sub stix-relationship-object,
	relates owning-source as source,
	relates owned-target as target;

relation compromises,
	sub stix-relationship-object,
	relates compromising-source as source,
	relates compromised-target as target;

relation authored-by,
	sub stix-relationship-object,
	relates authored-source as source,
	relates author-target as target;

relation drops,
	sub stix-relationship-object,
	relates dropping-source as source,
	relates dropped-target as target;

relation downloads,
	sub stix-relationship-object,
	relates downloading-source as source,
	relates downloaded-target as target;

relation exploits,
	sub stix-relationship-object,
	relates exploiting-source as source,
	relates exploited-target as target;

relation investigates,
	sub stix-relationship-object,
	relates investigating-source as source,
	relates investigated-target as target;

relation remediates,
	sub stix-relationship-object,
	relates remediating-source as source,
	relates remediated-target as target;

relation based-on,
	sub stix-relationship-object,
	relates basing-source as source,
	relates based-target as target;

relation communicates-with,
	sub stix-relationship-object,
	relates communicating-source as source,
	relates communicated-target as target;

relation consists-of,
	sub stix-relationship-object,
	relates consisting-source as source,
	relates consisted-target as target;

relation controls,
	sub stix-relationship-object,
	relates controlling-source as source,
	relates controlled-target as target;

relation beacons-to,
	sub stix-relationship-object,
	relates beaconing-source as source,
	relates beaconed-target as target;

relation exfiltrates-to,
	sub stix-relationship-object,
	relates exfiltrating-source as source,
	relates exfiltrated-target as target;

relation variant-of,
	sub stix-relationship-object,
	relates varying-source as source,
	relates varied-target as target;

relation characterizes,
	sub stix-relationship-object,
	relates characterizing-source as source,
	relates characterized-target as target;


# TODO
relation analysis-of,
	sub stix-relationship-object,
	relates analyzing-source as source,
	relates analyzed-target as target,
	relates host-vm,
	relates operating-system,
	relates installed-software,
	relates captured-sco;

relation av-analysis-of,
	sub analysis-of;

relation static-analysis-of,
	sub analysis-of;

relation dynamic-analysis-of,
	sub analysis-of;





relation impersonates,
	sub stix-relationship-object,
	relates impersonating-source as source,
	relates impersonated-target as target;

relation resolves-to,
	sub stix-relationship-object,
	relates resolving-source as source,
	relates resolved-target as target;

relation belongs-to,
    sub stix-relationship-object,
	relates owned-source as source,
	relates owner-target as target;


# --- Embedded relationships ---

relation embedded-relationship,
  relates owner @card(1),
  relates embedded @card(1);

relation created-by,
  sub embedded-relationship,
  relates creator as owner,
  relates created as embedded;

relation object-marking,
  sub embedded-relationship,
  relates object as owner,
  relates marking as embedded;

# 7.2.3
relation granular-marking,
  sub embedded-relationship,
  relates object as owner,
  relates marking as embedded,

  owns lang,
  owns selector @card(0..)   # NOTE: this will be not super usable without ordered properties/plays!
  ;

relation object-reference,
  sub embedded-relationship,
  relates object as owner,
  relates referenced as embedded;

relation meta-object-reference,
  sub object-reference,
  relates meta-object as object,
  relates referenced-object as referenced,
  owns modified; # note: must match the time of the modified object being referenced?

relation host-vm,
  sub embedded-relationship,
  relates hosted as owner,
  relates host as embedded;

relation operating-system,
  sub embedded-relationship,
  relates hosted as owner,
  relates os as embedded;

relation installed-software,
  sub embedded-relationship,
  relates hosted as owner,
  relates software as embedded;

relation analysis-sco,
  sub embedded-relationship,
  relates analyzed as owner,
  relates analysis as embedded;

relation sample,
  sub embedded-relationship,
  relates source as owner,
  relates sample as embedded;

# --- embedded relations with SCO source ---
relation contains_,
    sub embedded-relationship,
	relates container as owner,
	relates contained as embedded;

relation email-header,
	sub embedded-relationship,
	relates email as owner,
	relates address as embedded;

relation header-from,
	sub email-header;

relation header-sender,
	sub email-header;

relation header-to,
	sub email-header;

relation header-cc,
	sub email-header;

relation header-bcc,
	sub email-header;

relation raw-email,
	sub embedded-relationship,
	relates email as owner,
	relates artifact as embedded;

relation message-body-data,
	sub embedded-relationship,
	relates request as owner,
	relates body as embedded;

relation file-content,
	sub embedded-relationship,
	relates file as owner,
	relates content as embedded;

relation service-dll,
	sub embedded-relationship,
	relates service as owner,
	relates dll as embedded;


# === domain_objects.tql ===

entity stix-object @abstract,
  owns id @key,                       # all core and meta objects must have a unique ID
  owns type @card(1),                 # all core and meta objects must have a type
  owns spec-version @values("2.1"),

  ### STIX inconsistency: "common relationship types are defined for all SDOs and SCOs", however NOTE does not!
  plays derived-from:deriving-source,
  plays derived-from:derived-target,
  plays duplicate-of:duplicating-source,
  plays duplicate-of:duplicated-target,
  plays related-to:relating-source,
  plays related-to:related-target,

  plays object-reference:referenced,
  plays meta-object-reference:referenced-object,
  plays external-reference-ownership:owner;     # TODO: requires lists, if order is important


entity stix-domain-object @abstract,
  sub stix-object,

  # required properties
  owns spec-version @card(1),         # all SDO's must have a spec-version value
  owns created @card(1),              # all SDO's must have a created value
  owns modified @card(1),             # all SDO's must have a modified value
  owns revoked,
  owns confidence,
  owns lang,
  owns label_ @card(0..),

  # top-level relationships
  plays sighting:sighting-of,

  # embedded relationships
  plays created-by:created,
  plays object-marking:object,
  plays granular-marking:object

  # TODO: extensions
  ;


#  --- 4.1 Attack Pattern ---
entity attack-pattern,
  sub stix-domain-object,
  # common properties (specialised inheritance)
  owns type @values("attack-pattern"),

  # specific properties
  owns name @card(1),
  owns description,
  owns alias_ @card(0..),
  plays kill-chain-phase-ownership:owner,

  # common relationships (specialised inheritance)

  # specific relationships
  plays delivers:delivering-source,
  plays targets:targeting-source,
  plays uses:using-source,

  plays indicates:indicated-target,
  plays mitigates:mitigated-target,
  plays uses:used-target;


#  --- 4.2 Campaign ---
entity campaign,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("campaign"),

  # specific properties
  owns name @card(1),                 # required property
  owns description,
  owns alias_ @card(0..),
  owns first-seen,
  owns last-seen,
  owns objective,

  # specific relationships
  plays attributed-to:attributing-source,
  plays compromises:compromising-source,
  plays originates-from:originating-source,
  plays targets:targeting-source,
  plays uses:using-source,

  plays indicates:indicated-target;


#  --- 4.3 Course of Action ---
entity course-of-action,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("course-of-action"),

  # specific properties
  owns name @card(1),                 # required property
  owns description,

  # specific relationships
  plays investigates:investigating-source,
  plays mitigates:mitigating-source,
  plays remediates:remediating-source;

#  --- 4.4 Grouping ---
entity grouping,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("grouping"),

  # specific properties
  owns name,
  owns description,
  owns context @card(1),             # required property

  # specific relationships

  # embedded relationships
  plays object-reference:object;


#  --- 4.5 Identity ---
entity identity,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("identity"),

  # specific properties
  owns name @card(1),                 # required property
  owns description,
  owns role_ @card(0..),              # list of strings... if order matters, must wait for lists
  owns identity-class,
  owns sector @card(0..),             # list of strings... if order matters, just wait for lists
  owns contact-information,

  # top-level relationships
  plays sighting:where-sighted,

  # specific relationships
  plays located-at:locating-source,

  plays targets:targeted-target,
  plays attributed-to:attributed-target,
  plays impersonates:impersonated-target,

  # embedded relationships
  plays created-by:creator;


#  --- 4.6 Incident ---
entity incident,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("incident"),

  # specific properties
  owns name @card(1),                 # required property
  owns description;


#  --- 4.7 Indicator ---
entity indicator,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("indicator"),

  # specific properties
  owns name,
  owns description,
  owns indicator-type @card(0..),     # TODO: implement with ordering [] when supported
  owns pattern @card(1),              # required property
  owns pattern-type @card(1),         # required property
  owns pattern-version,               # optional property
  owns valid-from @card(1),           # required property
  owns valid-until,                   # optional property

  # specific relationships
  plays indicates:indicating-source,
  plays based-on:basing-source,
  plays investigates:investigated-target,
  plays mitigates:mitigated-target,

  # additional components
  plays kill-chain-phase-ownership:owner;


#  --- 4.8 Infrastructure ---
entity infrastructure,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("infrastructure"),

  # specific properties
  owns name @card(1),                       # required property
  owns description,
  owns infrastructure-type @card(0..),
  owns alias_ @card(0..),
  owns first-seen,
  owns last-seen,
  # additional components
  plays kill-chain-phase-ownership:owner,

  # specific relationships
  plays communicates-with:communicating-source,
  plays consists-of:consisting-source,
  plays controls:controlling-source,
  plays delivers:delivering-source,
  plays has_:having-source,
  plays hosts:hosting-source,
  plays located-at:locating-source,
  plays uses:using-source,

  plays communicates-with:communicated-target,
  plays consists-of:consisted-target,
  plays controls:controlled-target,
  plays uses:used-target,
  plays compromises:compromised-target,
  plays beacons-to:beaconed-target,
  plays exfiltrates-to:exfiltrated-target,
  plays hosts:hosted-target,
  plays indicates:indicated-target,
  plays ownership:owned-target,
  plays targets:targeted-target;


#  --- 4.9 Intrusion Set ---
entity intrusion-set,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("intrusion-set"),

  # specific properties
  owns name @card(1),                     # required property
  owns description,
  owns alias_ @card(0..),                 # TODO: implement with ordering [] when supported
  owns first-seen,
  owns last-seen,
  owns goal @card(0..),                   # TODO: implement with ordering [] when supported
  owns resource-level,
  owns primary-motivation,
  owns secondary-motivation @card(0..),   # TODO: implement with ordering [] when supported

  # specific relationships
  plays attributed-to:attributing-source,
  plays compromises:compromising-source,
  plays hosts:hosting-source,
  plays ownership:owning-source,
  plays originates-from:originating-source,
  plays targets:targeting-source,
  plays uses:using-source,

  plays authored-by:author-target,
  plays attributed-to:attributed-target,
  plays indicates:indicated-target;


#  --- 4.10 Location ---
entity location,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("location"),

  # specific properties
  owns name,
  owns description,
  owns latitude,
  owns longitude,
  owns precision,
  owns region,
  owns country,
  owns administrative-area,
  owns city,
  owns street-address,
  owns postal-code,

  # top-level relationships
  plays sighting:where-sighted,

  # specific relationships
  plays located-at:location-target,
  plays originates-from:origin-target,
  plays targets:targeted-target;


#  --- 4.11 Malware ---
entity malware,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("malware"),

  # specific properties
  owns name,
  owns description,
  owns malware-type @card(0..),        # TODO: implement with ordering [] when supported
  owns is-family @card(1),              # required
  owns alias_ @card(0..),               # TODO: implement with ordering [] when supported
  owns first-seen,
  owns last-seen,
  owns architecture-execution-env @card(0..),   # TODO: implement with ordering [] when supported
  owns implementation-language @card(0..),      # TODO: implement with ordering [] when supported
  owns capability @card(0..),                   # TODO: implement with ordering [] when supported
  plays operating-system:hosted,
  plays sample:source,

  # specific relationships
  plays authored-by:authored-source,
  plays beacons-to:beaconing-source,
  plays exfiltrates-to:exfiltrating-source,
  plays communicates-with:communicating-source,
  plays controls:controlling-source,
  plays downloads:downloading-source,
  plays drops:dropping-source,
  plays exploits:exploiting-source,
  plays originates-from:originating-source,
  plays targets:targeting-source,
  plays uses:using-source,
  plays variant-of:varying-source,

  plays delivers:delivered-target,
  plays indicates:indicated-target,
  plays mitigates:mitigated-target,
  plays remediates:remediated-target,
  plays uses:used-target,
  plays drops:dropped-target,
  plays controls:controlled-target,
  plays characterizes:characterized-target,
  plays analysis-of:analyzed-target,

  # additional components
  plays kill-chain-phase-ownership:owner;
  # note: allows use of av-, static-, and dynamic- relations


#  --- 4.12 Malware Analysis ---
entity malware-analysis,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("malware-analysis"),

  # specific properties
  owns product @card(1),                    # required property
  owns version,
  owns configuration-version,
  owns module @card(0..),                   # TODO: implement with ordering [] when supported
  owns analysis-engine-version,
  owns analysis-definition-version,
  owns submitted,
  owns analysis-started,
  owns analysis-ended,
  owns result-name,
  owns result,

  # embedded relationships
  plays host-vm:hosted,
  plays operating-system:hosted,
  plays installed-software:hosted,
  plays analysis-sco:analysis,
  plays sample:source,

  # specific relationships
  plays characterizes:characterizing-source,

  plays analysis-of:analyzing-source;
  # note: allows all subtypes of analysis-of: av-, static-, dynamic- analysis


#  --- 4.13 Note ---
entity note,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("note"),

  # specific properties
  owns abstract_,
  owns content @card(1),              # required property
  owns author @card(0..),            # TODO: implement with ordering [] when supported

  # embedded relationships
  plays object-reference:object;


#  --- 4.14 Observed Data ---
entity observed-data,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("observed-data"),

  # specific properties
  owns first-observed @card(1),           # required property
  owns last-observed @card(1),            # required property
  owns number-observed @card(1),          # required property
  # owns object-refs @card(0..),          # TODO: implement with ordering [] when supported

  # top-level relationships
  plays sighting:observed-data,

  # embedded relationships
  plays object-reference:object,

  # specific relationships
  plays based-on:based-target,
  plays consists-of:consisted-target;


#  --- 4.15 Opinion ---
entity opinion-object,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("opinion"),

  # specific properties
  owns explanation,
  owns author @card(0..),             # TODO: implement with ordering [] when supported
  owns opinion @card(1),              # required property

  # embedded relationships
  plays object-reference:object;


# --- 4.16 Report ---
entity report,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("report"),

  # specific properties
  owns name @card(1),                   # required property
  owns description,
  owns report-type @card(0..),          # TODO: implement with ordering [] when supported
  owns published @card(1),              # required property

  # embedded relationships
  plays object-reference:object;


# --- 4.17 Threat Actor ---
entity threat-actor,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("threat-actor"),

  # specific properties
  owns name @card(1),                     # required property
  owns description,
  owns threat-actor-type @card(0..),      # TODO: implement with ordering [] when supported
  owns alias_ @card(0..),                 # TODO: implement with ordering [] when supported (aliases in STIX)
  owns first-seen,
  owns last-seen,
  owns role_ @card(0..),                  # TODO: implement with ordering [] when supported
  owns goal @card(0..),                   # TODO: implement with ordering [] when supported
  owns sophistication,
  owns resource-level,
  owns primary-motivation,
  owns secondary-motivation @card(0..),   # TODO: implement with ordering [] when supported
  owns personal-motivation @card(0..),    # TODO: implement with ordering [] when supported

  # specific relationships
  plays attributed-to:attributing-source,
  plays compromises:compromising-source,
  plays hosts:hosting-source,
  plays ownership:owning-source,
  plays impersonates:impersonating-source,
  plays located-at:locating-source,
  plays targets:targeting-source,
  plays uses:using-source,

  plays attributed-to:attributed-target,
  plays authored-by:author-target,
  plays indicates:indicated-target;


# --- 4.18 Tool ---
entity tool,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("tool"),

  # specific properties
  owns name @card(1),                  # required property
  owns description,
  owns tool-type @card(0..),           # TODO: implement with ordering [] when supported
  owns alias_ @card(0..),              # TODO: implement with ordering [] when supported (aliases in STIX)
  # owns kill-chain-phases @card(0..), # TODO: implement: requires struct types (maybe List of Struct types if order is important)
  owns tool-version,

  # specific relationships
  plays delivers:delivering-source,
  plays drops:dropping-source,
  plays has_:having-source,          # has vulnerability
  plays targets:targeting-source,
  plays uses:using-source,

  plays hosts:hosted-target,         # infrastructure hosts tool
  plays downloads:downloaded-target,
  plays indicates:indicated-target,
  plays mitigates:mitigated-target,
  plays uses:used-target,

  # additional components
  plays kill-chain-phase-ownership:owner;


# --- 4.19 Vulnerability ---
entity vulnerability,
  sub stix-domain-object,

  # common properties (specialised inheritance)
  owns type @values("vulnerability"),

  # specific properties
  owns name @card(1),                 # required property
  owns description,

  # specific relationships
  plays targets:targeted-target,
  plays exploits:exploited-target,
  plays remediates:remediated-target,
  plays mitigates:mitigated-target,
  plays has_:had-target;


# === cyber_observable_objects.tql ===


entity stix-cyber-observable-object @abstract,
  sub stix-object,
  owns defanged,

  # common relationships
  plays consists-of:consisted-target,

  plays analysis-sco:analyzed,
  plays object-marking:object,
  plays sample:sample;


# --- Artifact Object (6.1) ---
entity artifact,
  sub stix-cyber-observable-object,

  # specialised common properties
  owns type @values("artifact"),

  # optional common properties

  # specific properties
  owns mime-type,
  owns payload-bin,
  owns url-value,
  owns hash @card(0..),
  owns encryption-algorithm,
  owns decryption-key,

  plays file-content:content,         # target of 'content-ref'
  plays raw-email:artifact,           # target of 'raw-email-ref'
  plays message-body-data:body,       # target of 'message-body-data-ref'

  # indirect ownerships
  plays hash-entry:hash-owner;


# --- Autonomous System Object (6.2) ---
entity autonomous-system,
  sub stix-cyber-observable-object,

  # specialised common properties
  owns type @values("autonomous-system"),

  # required properties
  owns system-number @card(1),          # required property

  # optional properties
  owns system-name,
  owns rir;


# --- Directory Object (6.3) ---
entity directory,
  sub stix-cyber-observable-object,

  # specialised common properties
  owns type @values("directory"),

  # required properties
  owns path @card(1),                 # required property

  # optional properties
  owns path-enc,
  owns ctime,
  owns mtime,
  owns atime,

  plays contains_:container,            # from 'content-ref'
  plays contains_:contained;            # target of 'content-ref'


# --- Domain Name Object (6.4) ---
entity domain-name,
  sub stix-cyber-observable-object,

  # specialised common properties
  owns type @values("domain-name"),

  # required properties
  owns domain-value @card(1),         # required property

  # relationships
  plays communicates-with:communicated-target,
  plays resolves-to:resolving-source,   # from 'resolves-to-ref'
  plays resolves-to:resolved-target;    # target of 'resolves-to-ref'


# --- Email Address Object (6.5) ---
entity email-addr,
  sub stix-cyber-observable-object,
  # specialised common properties
  owns type @values("email-addr"),

  # required properties
  owns email-value @card(1),          # required property. TODO: regex for email addres RFC5322

  # optional properties
  owns display-name,

  plays belongs-to:owned-source,
  plays email-header:address;


# Email Message Object (section 6.6)
entity email-message,
  sub stix-cyber-observable-object,
  owns type @values("email-message"),
  owns is-multipart @card(1),         # required property
  owns date_,
  owns content-type,
  owns message-id,
  owns subject,
  owns received-line @card(0..),     # TODO: requires ordering!!
  owns body,

  # embedded relationships
  plays email-header:email,           # from 'from-ref', 'sender-ref', 'to-refs', 'cc-refs', 'bcc-refs'
  plays raw-email:email,              # from 'raw-email-ref'

  plays email-additional-headers-dict-entry:header-owner,

  plays body-multipart:email;          # from 'body-multipart'


entity email-mime-part-type,
  owns body,
  owns content-type,
  owns content-disposition,

  plays body-multipart:body,
  plays email-mime-part-body-raw:owner;

relation body-multipart,
  relates email @card(1),
  relates body @card(1);

relation email-mime-part-body-raw,
  relates owner @card(1),
  relates raw @card(1);

# Note: extending other entities
entity artifact,
  plays email-mime-part-body-raw:raw;

entity file,
  plays email-mime-part-body-raw:raw;

relation email-additional-headers-dict-entry,
  sub dictionary-entry,
  owns additional-header-field @card(1),
  owns additional-header-value @card(1..),     # support repeated values
  relates header-owner as owner;


# File Object (section 6.7)
entity file,
  sub stix-cyber-observable-object,
  owns type @values("file"),
  owns size,
  owns name,                     # Note: must have either name or hashes
  owns name-enc,
  owns magic-number-hex,
  owns hash @card(0..),          # Note: must have either name or hashes
  owns mime-type,
  owns ctime,
  owns mtime,
  owns atime,

  plays downloads:downloaded-target,
  plays drops:dropped-target,
  plays contains_:contained,     # Note: used for both files reverse link 'parent-directory-ref' and forward 'contains-ref' link
  plays file-content:file,       # from 'content-ref'
  plays service-dll:dll,         # from 'service-dll-refs'

  plays email-mime-part-body-raw:raw,

  # indirect ownerships
  plays hash-entry:hash-owner;


# Archive file extension (6.7.2)
entity archive,
  sub file,
  owns comment,
  plays contains_:container @card(1..);

# NTFS File Extension (6.7.3)
entity ntfs-file,
  sub file,
  owns sid,

  # indirect ownerships
  plays ntfs-alternate-data-stream-type-ownership:owner;

entity ntfs-alternate-data-stream-type,
  owns name @card(1),
  owns size,
  plays hash-entry:hash-owner,

  plays ntfs-alternate-data-stream-type-ownership:data-stream-type;

relation ntfs-alternate-data-stream-type-ownership,
  relates owner @card(1),
  relates data-stream-type @card(1);

# PDF File Extension (6.7.4)
entity pdf,
  sub file,
  owns version,
  owns is-optimized,
  owns pdfid0,
  owns pdfid1;

relation pdf-document-info-dict-entry,
  sub dictionary-entry,
  relates info-owner as owner,
  owns key-string @card(1),
  owns value-string @card(1);

# Raster Image File Extension (6.7.5)
entity raster-image,
  sub file,
  owns image-height,
  owns image-width,
  owns bits-per-pixel,

  # indirect ownerships
  plays exif-tags-dict-entry:tags-owner;

relation exif-tags-dict-entry,
  sub dictionary-entry,
  relates tags-owner as owner,
  owns key-string @card(1),
  owns value-string @card(1);  # TODO: technically, this should be either a String or Integer

# Windows PE Binary File Extension (6.7.6)
entity windows-pe-binary,
  sub file,
  owns pe-type @card(1),
  owns imphash,
  owns machine-hex,
  owns number-of-sections,
  owns time-date-stamp,
  owns pointer-to-symbol-table-hex,
  owns size-of-optional-header,
  owns characteristics-hex,

  # indirect ownerships
  plays file-header-hash-dict-entry:hash-owner,
  plays windows-pe-section-type-ownership:owner,
  plays windows-pe-optional-header-ownership:owner;

# separate re-implementation of generic "hashes", which a file can also have!
relation file-header-hash-dict-entry,
  sub dictionary-entry,
  owns hash-algorithm @card(1),
  owns hash @card(1),
  relates hash-owner as owner;

entity windows-pe-optional-header,
  owns magic-hex,
  owns major-linker-version,
  owns minor-linker-version,
  owns size-of-code,
  owns size-of-initialized-data,
  owns size-of-uninitialized-data,
  owns address-of-entry-point,
  owns base-of-code,
  owns base-of-data,
  owns image-base,
  owns section-alignment,
  owns file-alignment,
  owns major-os-version,
  owns minor-os-version,
  owns major-image-version,
  owns minor-image-version,
  owns major-subsystem-version,
  owns minor-subsystem-version,
  owns win32-version-value-hex,
  owns size-of-image,
  owns size-of-headers,
  owns checksum-hex,
  owns subsystem-hex,
  owns dll-characteristics-hex,
  owns size-of-stack-reserve,
  owns size-of-stack-commit,
  owns size-of-heap-reserve,
  owns size-of-heap-commit,
  owns loader-flags-hex,
  owns number-of-rva-and-sizes,

  plays windows-pe-optional-header-ownership:header,

  # indirect ownerships
  plays hash-entry:hash-owner;

relation windows-pe-optional-header-ownership,
  relates owner @card(1),
  relates header @card(1);

entity windows-pe-section-type,
  owns name @card(1),
  owns size,
  owns entropy,

  plays windows-pe-section-type-ownership:pe-section,

  # indirect ownerships
  plays hash-entry:hash-owner;

relation windows-pe-section-type-ownership,
  relates owner @card(1),
  relates pe-section @card(1);

# IPv4 Address Object (section 6.8)
entity ipv4-addr,
  sub stix-cyber-observable-object,
  owns type @values("ipv4-addr"),
  owns ipv4-value @card(1),             # required property
  owns resolves-to-ref @card(0..),
  owns belongs-to-ref @card(0..),

  plays communicates-with:communicated-target,
  plays resolves-to:resolving-source,
  plays belongs-to:owned-source;

# IPv6 Address Object (section 6.9)
entity ipv6-addr,
  sub stix-cyber-observable-object,
  owns type @values("ipv6-addr"),
  owns ipv6-value @card(1),         # required property
  owns resolves-to-ref @card(0..),
  owns belongs-to-ref @card(0..),

  plays communicates-with:communicated-target,
  plays resolves-to:resolving-source,
  plays belongs-to:owned-source;

# MAC Address Object (section 6.10)
entity mac-addr,
  sub stix-cyber-observable-object,
  owns type @values("mac-addr"),
  owns mac-value @card(1);           # required property

# Mutex Object (section 6.11)
entity mutex,
  sub stix-cyber-observable-object,
  owns type @values("mutex"),
  owns name @card(1);                # required property

# Network Traffic Object (section 6.12)
entity network-traffic,
  sub stix-cyber-observable-object,
  owns type @values("network-traffic"),
  owns start,
  owns end_,
  owns is-active,
  owns src-ref,                   # Note: must have either src-ref or dst-ref
  owns dst-ref,                   # Note: must have either src-ref or dst-ref
  owns src-port,
  owns dst-port,
  owns protocol @card(1..),       # required property, uses 'protocol' instead of 'protocols' for list semantics
  owns src-byte-count,
  owns dst-byte-count,
  owns src-packets,
  owns dst-packets,
  owns src-payload-ref,
  owns dst-payload-ref,
  owns encapsulates-ref @card(0..),
  owns encapsulated-by-ref,

  # indirect ownerships
  plays ipfix-dict-entry:ipfix-owner;

relation ipfix-dict-entry,
  sub dictionary-entry,
  relates ipfix-owner as owner,
  owns key-string @card(1),
  owns value-string @card(1);

# HTTP Request Extension (6.12.2)
entity http-request,
  sub network-traffic,
  owns request-method @card(1),
  owns request-value @card(1),
  owns request-version,
  owns message-body-length,

  # embedded relatinoships
  plays message-body-data:request,

  # indirect ownerships
  plays request-header-dict-entry:request;

relation request-header-dict-entry,
  sub dictionary-entry,
  relates request as owner,
  owns key-string @card(1),
  owns value-string @card(1);

# ICMP Extension (6.12.3)
entity icmp,
  sub network-traffic,
  owns icmp-type-hex,
  owns icmp-code-hex;

# Network Socket Extension (6.12.4)
entity network-socket,
  sub network-traffic,
  owns address-family @card(1),
  owns is-blocking,
  owns is-listening,
  owns socket-type,
  owns socket-descriptor,
  owns socket-handle,

  # indirect ownerships
  plays options-dict-entry:options-owner;

relation options-dict-entry,
  sub dictionary-entry,
  relates options-owner as owner,
  owns key-string @card(1),
  owns value-integer @card(1);

# TCP extension (6.12.5)
entity tcp,
  sub network-traffic,
  owns src-flags-hex @card(0..),
  owns dst-flags-hex @card(0..);

# Process Object (6.13)
entity process,
    sub stix-cyber-observable-object,
    owns type @values("process"),
    owns is-hidden,
    owns pid,
    owns created-time,
    owns cwd,
    owns command-line
    # owns environment-variables,
    # owns opened-connection-refs @card(0..),
    # owns creator-user-ref,
    # owns image-ref,
    # owns parent-ref,
    # owns child-refs @card(0..)
    ;

# Windows Process Extension (6.13.2)
entity windows-process,
  sub process,
  owns aslr-enabled,
  owns dep-enabled,
  owns priority,
  owns owner-sid,
  owns window-title,
  owns integrity-level,

  # indirect ownerships
  plays startup-info-dict-entry:info-owner;
  # TODO: Windows™ Service Extension

relation startup-info-dict-entry,
  sub dictionary-entry,
  relates info-owner as owner,
  owns key-string @card(1),
  owns value-string @card(1);


# Windows Service Extension (6.13.2)
entity windows-service,
  sub process,
  owns service-name,
  owns description @card(0..),
  owns display-name,
  owns group-name,
  owns start-type,
  owns service-type,
  owns service-status,

  # embedded relationships
  plays service-dll:service;


# Software Object (section 6.14)
entity software,
  sub stix-cyber-observable-object,
  owns type @values("software"),

  # required properties
  owns name @card(1),                    # required property

  # optional properties
  owns cpe,
  owns swid,
  owns language @card(0..),
  owns vendor,
  owns version,

  plays host-vm:host,
  plays operating-system:os,
  plays installed-software:software;

# URL Object (section 6.15)
entity url,
  sub stix-cyber-observable-object,
  owns type @values("url"),
  owns url-value @card(1),              # required property

  plays communicates-with:communicated-target;


# User Account Object (section 6.16)
entity user-account,
  sub stix-cyber-observable-object,
  owns type @values("user-account"),
  # Note: At least one specific property MUST be present per STIX spec
  owns user-id,
  owns credential,
  owns account-login,
  owns account-type,
  owns display-name,
  owns is-service-account,
  owns is-privileged,
  owns can-escalate-privs,
  owns is-disabled,
  owns account-created,
  owns account-expires,
  owns credential-last-changed,
  owns account-first-login,
  owns account-last-login,

  plays belongs-to:owner-target;

# UNIX Account extension (6.16.2)
entity unix-account,
  sub user-account,
  owns gid,
  owns group_ @card(0..),
  owns home-dir,
  owns shell;

# Windows™ Registry Key Object (section 6.17)
entity windows-registry-key,
  sub stix-cyber-observable-object,
  owns type @values("windows-registry-key"),
  # Note: At least one specific property MUST be present per STIX spec
  owns windows-registry-key-string,
  owns modified-time,
  # owns creator-user-ref,
  owns number-of-subkeys,

  # indirect ownerships
  plays windows-registry-value-ownership:owner;


entity windows-registry-value,
  owns name,
  owns registry-value-data,
  owns registry-value-data-type,

  plays windows-registry-value-ownership:value_;

relation windows-registry-value-ownership,
  relates owner,
  relates value_;


# X.509 Certificate Object (section 6.18)
entity x509-certificate,
  sub stix-cyber-observable-object,
  owns type @values("x509-certificate"),
  # Note: At least one specific property MUST be present per STIX spec
  owns is-self-signed,
  owns version,
  owns serial-number,
  owns signature-algorithm,
  owns issuer,
  owns validity-not-before,
  owns validity-not-after,
  owns subject,
  owns subject-public-key-algorithm,
  owns subject-public-key-modulus,
  owns subject-public-key-exponent,

  # indirect ownerships
  plays hash-entry:hash-owner;

entity x509-v3,
  sub x509-certificate,
  owns basic-constraints,
  owns name-constraints,
  owns policy-constraints,
  owns key-usage,
  owns extended-key-usage,
  owns subject-key-identifier,
  owns authority-key-identifier,
  owns subject-alternative-name,
  owns issuer-alternative-name,
  owns subject-directory-attributes,
  owns crl-distribution-points,
  owns inhibit-any-policy,
  owns private-key-usage-period-not-before,
  owns private-key-usage-period-not-after,
  owns certificate-policies,
  owns policy-mappings;


# === meta_objects.tql ===


entity stix-meta-object @abstract,
	sub stix-object,
  
  # common properties

    # TODO: unimplemented
    # owns extensions,
    # owns granular-markings[]

  plays created-by:created,
  plays object-marking:object
  ;

# --- 7.1 Language Content --- 
entity language-content,
    sub stix-meta-object,

    # common properties (specialised inheritance)
    owns type @values("language-content")

    # owns contents,        # TODO: requires dictionary, and is quite complicated!!!
    
    # embedded relationships
    # plays meta-object-reference:object
  ;


# --- 7.2 Data Marking ---
entity marking-definition ,
  sub stix-meta-object,

  # common properties
  owns type @values("marking-definition"),
  owns created @card(1),              # Required
  owns name,
  
  # embedded relationships
  plays object-marking:marking,
  plays granular-marking:object,

  # specific properties
  owns statement @card(0..1);

attribute statement, value string;

# --- 7.2.1.4 TLP Marking ---
entity tlp-marking,
  sub marking-definition,
    # specific properties
  owns tlp  @values("white", "green", "amber", "red") @card(1); # Required

attribute tlp, value string;

# --- Object marking --- 
# Note: no entity type definition, using relation instead!

# --- 7.2.3 Granular Marking --- 
# Note: no entity type definition, using relation instead!

# --- 7.3 Extension Definition ---
entity extension-definition,
  sub stix-meta-object,

  # common properties
  owns type @values("extension-definition"),
  owns modified @card(1),                       # Required
  owns created @card(1),                        # Required
  owns revoked,
  owns label_ @card(0..),

  # specific properties
  owns name @card(1),
  owns description,
  owns schema @card(1),                   # Required: URL to the JSON schema
  owns version @card(1),                  # Required: Version of the extension
  owns extension-type @card(1..),         # Required (at least one): From STIX extension-type-ov


  owns extension-property @card(0..)

  # embedded relationships inherited from stix-meta-object:
  # created-by handles created-by-ref
  # object-marking handles object-marking-refs
  # granular-marking handles granular-markings (check if stix-meta-object needs to play this)
  ;
